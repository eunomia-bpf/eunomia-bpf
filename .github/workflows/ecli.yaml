name: Build and test ecli on Ubuntu

on:
  push:
    branches: ["*"]
    paths:
      - "ecli/**"
      - "compiler/**"  # Ensure ecc and ecli releasing at same time
      - "wasm-rumtime/**"  # Release when dependencies updated
      - "third_party/**"
      - "bpf-loader-rs/**"
      - "eunomia-sdk/**"
      - ".github/**"

  pull_request:
    branches: ["*"]
    paths:
      - "ecli/**"
      - "compiler/**"
      - "wasm-rumtime/**"
      - "third_party/**"
      - "bpf-loader-rs/**"
      - "eunomia-sdk/**"
      - ".github/**"
env:
  BUILD_TYPE: Release
  INSTALL_LOCATION: .local

jobs:
  build:

    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[ci skip]')"
    strategy:
      matrix:
        target: [ x86_64-unknown-linux-gnu ]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - name: Set latest release version
      if:   github.event_name == 'push' && github.ref == 'refs/heads/master'
      id: set_version
      uses: actions/github-script@v6
      
      with:
        result-encoding: string
        script: |
          const { data: releases } = await github.rest.repos.listReleases({
            owner: context.repo.owner,
            repo: context.repo.repo,
          });
          
          const { data: tags } = await github.rest.repos.listTags({
            owner: context.repo.owner,
            repo: context.repo.repo
          });
          
          if (releases.length === 0) { return "v0.0.1"; }
          
          function increase_v(version) {
            const parts = version.split(".");
            const last = parseInt(parts[2]) + 1;
            const next_version = `${parts[0]}.${parts[1]}.${last.toString()}`;
            return next_version;
          }
          
          const latest_release_tag = releases[0].tag_name;
          
          const tag = tags.find(tag => tag.commit.sha === context.sha);
          
          return tag ? tag.name : increase_v(latest_release_tag)

    - name: install deps
      run: |
          sudo make -C ecli install-deps
          sudo make -C bpf-loader-rs install-deps

    - name: cache dependencies
      uses: actions/cache@v3
      id: cache
      with:
        path: ${{ github.workspace }}/${{ env.INSTALL_LOCATION }}
        key: ${{ runner.os }}-dependencies

    - name: cache rust
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: |
          compiler/cmd
          ecli
          wasm-runtime/runtime/rust
          eunomia-sdks/eunomia-rs

    - name: make ecli
      run:  make ecli

    - name: Package
      if:   github.event_name == 'push' && github.ref == 'refs/heads/master'
      shell: bash
      run: |
        mkdir release
        cp ecli/target/release/ecli ./release/
        cd release
        tar czvf ./ecli-${{ matrix.target }}-${{ steps.set_version.outputs.result }}.tar.gz ecli

    - name: Publish
      if:   github.event_name == 'push' && github.ref == 'refs/heads/master' && github.repository_owner == 'eunomia-bpf'
      uses: softprops/action-gh-release@v1
      with:
          files: |
            release/ecli-${{ matrix.target }}-${{ steps.set_version.outputs.result }}.tar.gz
            release/ecli
          prerelease: false
          tag_name: ${{ steps.set_version.outputs.result }}
          generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
