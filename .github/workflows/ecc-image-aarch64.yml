name: Build and public ecc docker image (aarch64)

on:
  push:
    branches: "master"
env:
  GITHUB_REPO_OWNER: ${{ github.repository_owner }}
jobs:
  # define job to build and publish docker image
  build-and-push-ecc-image:
    runs-on: ubuntu-latest
    # run only when code is compiling and tests are passing
    if: "!contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, '[ci skip]')"
    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      # setup Docker buld action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: downcase REPO
        run: |
          echo "REPO_OWNER=${GITHUB_REPO_OWNER,,}" >>${GITHUB_ENV}
      - name: use REPO
        run: |
          echo "The value of REPO_OWNER is: ${REPO_OWNER}"
      - name: Prepare bpftool and vmlinux repo for building workspace
        # Move more steps outside of the virtual machine
        run: |
          mkdir assets
          cd assets
          git clone --recursive https://github.com/eunomia-bpf/vmlinux
          cd vmlinux
          git checkout 933f83b
          cd ..
          git clone --recursive https://github.com/eunomia-bpf/bpftool
          cd bpftool
          git checkout 0594034
      - name: Build workspace in aarch64 virtual machine
        uses: uraimo/run-on-arch-action@v2
        with: 
          arch: aarch64
          distro: ubuntu20.04
          run: |
            sudo apt-get update
            sudo apt-get install -y zlib1g-dev libelf-dev gcc make
            cd /workspace && mkdir bin
            cd /assets/bpftool/src
            CFLAGS="-static" make
            cp bpftool /workspace/bin
          dockerRunArgs: |
            --volume "${PWD}/workspace:/workspace"
            --volume "${PWD}/assets:/assets"
      - name: Build ecc-aarch64 image and push to GitHub Container Registry
        uses: docker/build-push-action@v2
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./
          file: ./compiler/dockerfile
          platforms: linux/arm64
          # Note: tags has to be all lower-case
          tags: |
            ghcr.io/${{ env.REPO_OWNER }}/ecc-aarch64:latest
          push: true

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
