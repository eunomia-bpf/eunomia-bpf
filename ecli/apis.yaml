openapi: 3.0.3
info:
  title: ecli API
  description: RESTFul APIs provided by ecli-server
  version: 1.0.0
  license:
    name: MIT

servers:
  - url: http://localhost:8527

components:
  schemas:
    general_error:
      type: object
      required:
        - message
      properties:
        message: 
          type: string
          description: "description of the unexpected situation"
    simple_id_request:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: uint64
    task_status:
      type: string
      description: The status of the task
      enum: [running, paused]
    program_type:
      type: string
      enum: ["wasm", "json", "tar"]
    log_type:
      type: string
      enum:
        - stderr
        - stdout
        - plain
    task_list_response:
      type: object
      required:
        - tasks
      properties:
        tasks:
          type: array
          items:
            type: object
            required:
              - id
              - name
              - status
            properties:
              status:
                $ref: "#/components/schemas/task_status"
              id:
                description: The ID of the task
                type: integer
                format: uint64
              name:
                description: The name of the task
                type: string

paths:
  /task:
    summary: Endpoints for tasks
    get:
      operationId: getTaskList
      summary: Get list of running tasks
      responses:
        "200":
          description: List of running tasks
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/task_list_response"
    post:
      operationId: startTask
      summary: Start a new task
      requestBody:
        description: Task data
        required: true
        content:
          application/json:
            schema:
              title: StartTaskRequest
              type: object
              required:
                - "program_data_buf"
                - "program_type"
              properties:
                program_data_buf:
                  type: string
                  description: Base64-encoded program data
                program_type:
                  $ref: "#/components/schemas/program_type"
                program_name:
                  type: string
                  description: The name of the program. If not provided, will generate a random one
                btf_archive_path:
                  type: string
                  description: Btf archive path in the server.
                extra_args:
                  description: Command line arguments to the eBPF program
                  type: object
                  items:
                    type: string
                export_json:
                  type: boolean
                  description: Whether to let the bpf-loader program dumps json. Only works for json & tar program
      responses:
        "400":
          description: "Invalid arguments"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/general_error"
        "200":
          description: List of running tasks
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - task_list
                properties:
                  id:
                    type: integer
                    format: uint64
                  task_list:
                    $ref: "#/components/schemas/task_list_response"
  /stop:
    post:
      operationId: stopTaskByID
      summary: Stop a task by id
      requestBody:
        description: Task id
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/simple_id_request"
      responses:
        "200":
          description: Status of stopping the task
          content:
            application/json:
              schema:
                type: object
                properties: {}
        "404":
          description: Invalid handle
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/general_error"
        "500":
          description: Failed to terminate
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/general_error"
    description: Stop a task by id or name
  /log:
    post:
      operationId: getTaskLogByID
      summary: get log
      description: get log from server
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: GetTaskLogRequest
              type: object
              required:
                - id
              properties:
                id:
                  type: integer
                  format: uint64
                  description: The program ID
                log_cursor:
                  type: integer
                  format: uint64
                  description: Only fetch logs after this cursor (included). If not provided, return logs stored with minimum cursor
                maximum_count:
                  type: integer
                  format: uint64
                  description: Fetch at most such number of logs. If not provided, use a default value that server specified
      responses:
        "404":
          description: Invalid handle
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/general_error"
        "200":
          description: The log fetched
          content:
            application/json:
              schema:
                title: GetTaskLogResponse
                type: array
                items:
                  type: object
                  required:
                    - cursor
                    - log
                  properties:
                    cursor:
                      type: integer
                      format: uint64
                    log:
                      type: object
                      required:
                        - log
                        - timestamp
                        - log_type
                      properties:
                        log:
                          type: string
                        timestamp:
                          type: integer
                          format: uint64
                        log_type:
                          $ref: "#/components/schemas/log_type"


  /pause:
    post:
      operationId: pauseTaskByID
      summary: Pause a task by id
      requestBody:
        description: Task id
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/simple_id_request"

      responses:
        "400":
          description: "Failed to pause"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/general_error"
        "404":
          description: Invalid handle
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/general_error"
        "200":
          description: Status of pausing the task
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/task_status"
    description: Pause a task by id

  /resume:
    post:
      operationId: resumeTaskByID
      summary: Resume a task by id
      requestBody:
        description: Task id
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/simple_id_request"
      responses:
        "400":
          description: "Failed to resume"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/general_error"
        "404":
          description: Invalid handle
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/general_error"
        "200":
          description: Status of the task
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/task_status"
    description: Resume a task by id
